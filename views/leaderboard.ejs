<div class="leaderboard-container">
    <h1>🏆 Leaderboard</h1>
    <p class="subtitle">De mest populære vitsene basert på ratings fra registrerte brukere</p>

    <% if (jokes && jokes.length > 0) { %>
    <div class="leaderboard-list">
        <% jokes.forEach((joke, index) => { %>
        <div class="leaderboard-item <%= index < 3 ? 'top-' + (index + 1) : '' %>" data-joke-id="<%= joke.jokeId %>">
            <div class="rank">
                <% if (index === 0) { %>🥇
                <% } else if (index === 1) { %>🥈
                <% } else if (index === 2) { %>🥉
                <% } else { %>#<%= index + 1 %>
                <% } %>
            </div>
            <div class="joke-info">
                <h3>Vits #<%= joke.jokeId %></h3>
                <p class="joke-text"><%= joke.text %></p>
                <div class="rating-stats">
                    <span class="average-rating">⭐ <%= joke.averageRating %>/5</span>
                    <span class="registered-ratings" data-joke-ratings="<%= joke.jokeId %>"><%= joke.registeredRatings %> registrerte ratings</span>
                    <span class="total-ratings" data-joke-ratings="<%= joke.jokeId %>"><%= joke.totalRatings %> totale ratings</span>
                </div>
            </div>
        </div>
        <% }) %>
    </div>
    <% } else { %>
    <div class="empty-state">
        <p>Ingen ratings registrert ennå. Vær den første til å rate!</p>
        <a href="/" class="btn btn-primary">Start rating</a>
    </div>
    <% } %>
</div>

<script>
// Real-time leaderboard updates
if (typeof io !== 'undefined') {
    const socket = io();
    
    socket.on('connect', function() {
        console.log('Connected to leaderboard real-time updates');
    });
    
    socket.on('jokeRatingUpdate', function(data) {
        console.log('Leaderboard: Joke rating update received:', data);
        updateLeaderboardRatingCounts(data);
    });
}

function updateLeaderboardRatingCounts(data) {
    const jokeId = data.jokeId;
    
    // Find the leaderboard item for this joke
    const leaderboardItem = document.querySelector(`[data-joke-id="${jokeId}"]`);
    if (leaderboardItem) {
        // Update rating counts
        const totalRatingsElement = leaderboardItem.querySelector('.total-ratings');
        const registeredRatingsElement = leaderboardItem.querySelector('.registered-ratings');
        const averageRatingElement = leaderboardItem.querySelector('.average-rating');
        
        if (totalRatingsElement) {
            totalRatingsElement.textContent = `${data.totalRatings} totale ratings`;
            totalRatingsElement.classList.add('rating-count-updated');
            setTimeout(() => {
                totalRatingsElement.classList.remove('rating-count-updated');
            }, 2000);
        }
        
        if (registeredRatingsElement) {
            registeredRatingsElement.textContent = `${data.registeredRatings} registrerte ratings`;
            registeredRatingsElement.classList.add('rating-count-updated');
            setTimeout(() => {
                registeredRatingsElement.classList.remove('rating-count-updated');
            }, 2000);
        }
        
        if (averageRatingElement && data.averageRating) {
            averageRatingElement.textContent = `⭐ ${data.averageRating}/5`;
            averageRatingElement.classList.add('rating-count-updated');
            setTimeout(() => {
                averageRatingElement.classList.remove('rating-count-updated');
            }, 2000);
        }
        
        // Add visual feedback to the entire item
        leaderboardItem.classList.add('rating-updated');
        setTimeout(() => {
            leaderboardItem.classList.remove('rating-updated');
        }, 3000);
    }
}
</script>
